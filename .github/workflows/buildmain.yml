name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build services
      run: |
        docker compose build --pull
        
        # Get image IDs using Docker service labels
        FRONTEND_IMAGE=$(docker images --filter "label=com.docker.compose.service=frontend" --format "{{.ID}}" -q | head -n 1)
        API_IMAGE=$(docker images --filter "label=com.docker.compose.service=api" --format "{{.ID}}" -q | head -n 1)
        
        echo "FRONTEND_IMAGE=$FRONTEND_IMAGE" >> $GITHUB_ENV
        echo "API_IMAGE=$API_IMAGE" >> $GITHUB_ENV

    - name: Test frontend
      run: |
        docker compose run --rm frontend npm test || true

    - name: Test API
      run: |
        docker compose run --rm api npm test || true

    - name: Tag and push images to DockerHub
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        docker tag ${{ env.FRONTEND_IMAGE }} imadch/cicd:frontend-${{ github.sha }}
        docker tag ${{ env.FRONTEND_IMAGE }} imadch/cicd:frontend-latest
        
        docker tag ${{ env.API_IMAGE }} imadch/cicd:api-${{ github.sha }}
        docker tag ${{ env.API_IMAGE }} imadch/cicd:api-latest
        
        docker push imadch/cicd:frontend-${{ github.sha }}
        docker push imadch/cicd:frontend-latest
        docker push imadch/cicd:api-${{ github.sha }}
        docker push imadch/cicd:api-latest
