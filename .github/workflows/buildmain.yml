name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and test frontend
      - name: Build and test frontend
        run: |
          docker compose build frontend
          docker compose run --rm frontend npm test || true 

      # Build and test API
      - name: Build and test API
        run: |
          docker compose build api
          docker compose run --rm api npm test || true

      # If on main branch, tag and push images
      - name: Tag and push frontend image
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          docker tag project_frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
          docker tag project_frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}

      - name: Tag and push API image
        if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          docker tag project_api:latest ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
          docker tag project_api:latest ${{ secrets.DOCKERHUB_USERNAME }}/api:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api:${{ github.sha }}

  
