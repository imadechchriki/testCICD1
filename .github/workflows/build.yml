name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Modifier le docker-compose.yml pour spécifier les noms d'images
    - name: Update docker-compose.yml with image names
      run: |
        # Remplacer les sections build par des images nommées
        sed -i 's/build: \.\/frontend/build: \.\/frontend\n    image: frontend:latest/g' docker-compose.yml
        sed -i 's/build: \.\/api/build: \.\/api\n    image: api:latest/g' docker-compose.yml
        cat docker-compose.yml

    # Build les services
    - name: Build services
      run: docker compose build

    - name: Test frontend
      run: |
        docker compose run --rm frontend npm test || true

    - name: Test API
      run: |
        docker compose run --rm api npm test || true

    # Push to DockerHub if on main/master branch
    - name: Tag and push images to DockerHub
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Tag avec le hash du commit et latest
        docker tag frontend:latest imadch/cicd:frontend-${{ github.sha }}
        docker tag frontend:latest imadch/cicd:frontend-latest
        
        docker tag api:latest imadch/cicd:api-${{ github.sha }}
        docker tag api:latest imadch/cicd:api-latest
        
        # Push des images
        docker push imadch/cicd:frontend-${{ github.sha }}
        docker push imadch/cicd:frontend-latest
        docker push imadch/cicd:api-${{ github.sha }}
        docker push imadch/cicd:api-latest


    
